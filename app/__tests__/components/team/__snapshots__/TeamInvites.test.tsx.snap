// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TeamInvitesList> renders correctly when all data provided 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "paddingHorizontal": 16,
    }
  }
  data={
    Array [
      Object {
        "accept_token": "string",
        "created_at": "string",
        "deny_token": "string",
        "email": "string",
        "id": 5,
        "team_avatar": "string",
        "team_description": "string",
        "team_id": 5,
        "team_name": "string",
        "type": "string",
        "updated_at": "string",
        "user_id": 5,
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            false,
            Array [
              Object {
                "padding": 8,
              },
              Object {
                "alignItems": "center",
                "display": "flex",
                "height": 80,
                "justifyContent": "center",
                "marginVertical": 8,
              },
            ],
          ]
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={
              Object {
                "justifyContent": "center",
                "marginRight": 4,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#fff",
                  },
                  Object {
                    "borderRadius": 8,
                    "elevation": 0,
                    "height": 40,
                    "width": 40,
                  },
                  Object {
                    "shadowColor": "rgba(0, 0, 0, 0.1)",
                    "shadowOffset": Object {
                      "height": 4,
                      "width": 0,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 4,
                  },
                  undefined,
                ]
              }
            >
              <Image
                source={
                  Object {
                    "uri": "string",
                  }
                }
                style={
                  Array [
                    Object {
                      "borderColor": "#FFFFFF",
                    },
                    Object {
                      "borderRadius": 8,
                      "borderWidth": 0,
                      "height": 40,
                      "width": 40,
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "marginVertical": 6,
                  "paddingLeft": 8,
                },
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                },
              ]
            }
          >
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Array [
                    Object {
                      "fontSize": 16,
                    },
                    Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                    },
                    Object {
                      "fontWeight": "bold",
                    },
                  ],
                ]
              }
            >
              string
            </Text>
            <Text
              numberOfLines={2}
              selectable={false}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                    "textAlign": "left",
                  },
                  Array [
                    Object {
                      "fontSize": 14,
                    },
                    Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              string
            </Text>
          </View>
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <View
              accessibilityComponentType=""
              accessibilityTraits=""
              style={
                Object {
                  "backgroundColor": "transparent",
                  "borderColor": "transparent",
                  "borderRadius": 100,
                  "borderStyle": "solid",
                  "borderWidth": 0,
                  "elevation": 0,
                  "minWidth": 64,
                }
              }
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": undefined,
                  }
                }
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 100,
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      Array [
                        Object {
                          "height": 56,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "color": "#000000",
                          "fontFamily": "System",
                          "fontWeight": "400",
                          "textAlign": "left",
                        },
                        Array [
                          Object {
                            "letterSpacing": 1,
                            "marginHorizontal": 16,
                            "marginVertical": 9,
                            "textAlign": "center",
                          },
                          undefined,
                          false,
                          Object {
                            "color": "#6200ee",
                            "fontFamily": "System",
                            "fontWeight": "500",
                          },
                          Object {
                            "fontFamily": "System",
                            "fontWeight": "500",
                          },
                          Array [
                            Object {
                              "fontSize": 16,
                              "fontWeight": "bold",
                              "letterSpacing": 0,
                            },
                            false,
                            undefined,
                          ],
                        ],
                      ]
                    }
                  >
                    Dołącz
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`<TeamInvitesList> renders correctly when empty array with data provided 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "paddingHorizontal": 16,
    }
  }
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View />
</RCTScrollView>
`;
