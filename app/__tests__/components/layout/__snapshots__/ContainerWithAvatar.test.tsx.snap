// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ContainerWithAvatar> renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "position": "relative",
        "zIndex": 100,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "height": 79,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#6200ee",
          },
        ]
      }
    />
    <View
      style={
        Object {
          "marginTop": -79,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
            },
            Object {
              "borderRadius": 100,
              "elevation": 6,
              "height": 158,
              "width": 158,
            },
            Object {
              "shadowColor": "rgba(0, 0, 0, 0.1)",
              "shadowOffset": Object {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 4,
            },
            Object {
              "zIndex": 10,
            },
          ]
        }
      >
        <Image
          source={
            Object {
              "uri": "https://test.example/image.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderColor": "#FFFFFF",
              },
              Object {
                "borderRadius": 100,
                "borderWidth": 4,
                "height": 158,
                "width": 158,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "paddingTop": 24,
      }
    }
  />
</View>
`;

exports[`<ContainerWithAvatar> should not render avatar image when isLoading prop is passed 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "position": "relative",
        "zIndex": 100,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "height": 79,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#6200ee",
          },
        ]
      }
    />
    <View
      style={
        Object {
          "marginTop": -79,
          "position": "relative",
        }
      }
    >
      <View
        onLayout={[Function]}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#fff",
              },
              Object {
                "borderRadius": 100,
                "elevation": 6,
                "height": 158,
                "width": 158,
              },
              Object {
                "shadowColor": "rgba(0, 0, 0, 0.1)",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 1,
                "shadowRadius": 4,
              },
              Object {
                "zIndex": 10,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <View
              style={
                Array [
                  Array [
                    Object {
                      "borderColor": "#FFFFFF",
                    },
                    Object {
                      "borderRadius": 100,
                      "borderWidth": 4,
                      "height": 158,
                      "width": 158,
                    },
                  ],
                  Object {
                    "backgroundColor": "#E1E9EE",
                    "overflow": "hidden",
                  },
                ]
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "paddingTop": 24,
      }
    }
  />
</View>
`;

exports[`<ContainerWithAvatar> should render button prop contents 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "position": "relative",
        "zIndex": 100,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "height": 79,
            "width": "100%",
          },
          Object {
            "backgroundColor": "#6200ee",
          },
        ]
      }
    />
    <View
      style={
        Object {
          "marginTop": -79,
          "position": "relative",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#fff",
            },
            Object {
              "borderRadius": 100,
              "elevation": 6,
              "height": 158,
              "width": 158,
            },
            Object {
              "shadowColor": "rgba(0, 0, 0, 0.1)",
              "shadowOffset": Object {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 1,
              "shadowRadius": 4,
            },
            Object {
              "zIndex": 10,
            },
          ]
        }
      >
        <Image
          source={
            Object {
              "uri": "test.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderColor": "#FFFFFF",
              },
              Object {
                "borderRadius": 100,
                "borderWidth": 4,
                "height": 158,
                "width": 158,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "bottom": 0,
            "elevation": 7,
            "left": 89,
            "position": "absolute",
            "zIndex": 100,
          }
        }
      >
        <View
          testID="button-test"
        />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "paddingTop": 24,
      }
    }
  />
</View>
`;
