<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use Illuminate\Auth\Events\Verified;
use Illuminate\Auth\Access\AuthorizationException;

class VerifyEmail extends Controller
{
    /**
     * Instantiate a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        // $this->middleware('signed');
    }

    /**
     * Activate user by email
     *
     * This is a signed route, you will need correct query params to
     * execute request against this route correctly.
     *
     * @group Authentication
     * @urlParam id int required User id to verify Example: 1
     * @urlParam hash string required User email hash to verify Example: YOUR_EMAIL_HASH
     * @queryParam expires string required Expiration unix timestamp Example: 1607463231
     * @queryParam signature string required One time url hash, generated by framework Example: YOUR_SIGNATURE_HASH
     *
     * @param  \Illuminate\Http\Request  $request
     */
    public function __invoke(Request $request)
    {
        $user = User::find($request->route('id'));

        if (!hash_equals((string) $request->route('hash'), sha1($user->getEmailForVerification()))) {
            throw new AuthorizationException;
        }

        if ($user->markEmailAsVerified())
            event(new Verified($user));

        return ['message' => __('User actived successfully')];
    }
}
